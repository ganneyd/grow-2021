// Mocks generated by Mockito 5.0.3 from annotations
// in grow_run_v1/test/features/grow/data/repositories/authentication_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:grow_run_v1/core/error/failures.dart' as _i5;
import 'package:grow_run_v1/features/grow/domain/entities/user/user_entity.dart'
    as _i6;
import 'package:grow_run_v1/features/grow/domain/repositories/authentication_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i3.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> getAuthenticatedUser() =>
      (super.noSuchMethod(Invocation.method(#getAuthenticatedUser, []),
              returnValue:
                  Future.value(_FakeEither<_i5.Failure, _i6.UserEntity>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> authenticateUser(
          String? email, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#authenticateUser, [email, password]),
              returnValue:
                  Future.value(_FakeEither<_i5.Failure, _i6.UserEntity>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> signUpUser(
          String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#signUpUser, [email, password]),
              returnValue:
                  Future.value(_FakeEither<_i5.Failure, _i6.UserEntity>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> registerUser(
          String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#registerUser, [email, password]),
              returnValue:
                  Future.value(_FakeEither<_i5.Failure, _i6.UserEntity>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> loginUser(
          String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#loginUser, [email, password]),
              returnValue:
                  Future.value(_FakeEither<_i5.Failure, _i6.UserEntity>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> signOutUser() =>
      (super.noSuchMethod(Invocation.method(#signOutUser, []),
              returnValue: Future.value(_FakeEither<_i5.Failure, void>()))
          as _i4.Future<_i2.Either<_i5.Failure, void>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> disableUserAccount(
          String? userID) =>
      (super.noSuchMethod(Invocation.method(#disableUserAccount, [userID]),
              returnValue: Future.value(_FakeEither<_i5.Failure, void>()))
          as _i4.Future<_i2.Either<_i5.Failure, void>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>> enableUserAccount(
          String? userID) =>
      (super.noSuchMethod(Invocation.method(#enableUserAccount, [userID]),
              returnValue:
                  Future.value(_FakeEither<_i5.Failure, _i6.UserEntity>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.UserEntity>>);
}
